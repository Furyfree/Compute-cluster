services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: compute-cluster-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mydb
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: compute-cluster-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

  db:
    image: postgres:16
    container_name: compute-cluster-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d

  guacd:
    image: guacamole/guacd:1.5.4
    container_name: compute-cluster-guacd
    restart: unless-stopped

  guacamole:
    image: guacamole/guacamole:1.5.4
    container_name: compute-cluster-guacamole
    ports:
      - "8001:8080"
    environment:
      GUACD_HOSTNAME: guacd
      GUACD_PORT: 4822

      POSTGRES_DATABASE: mydb
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

      LDAP_HOSTNAME: 10.51.33.17
      LDAP_PORT: 389
      LDAP_USER_BASE_DN: ${LDAP_BASE_DN}
      LDAP_USERNAME_ATTRIBUTE: uid
      LDAP_SEARCH_BIND_DN: ${LDAP_ADMIN_DN}
      LDAP_SEARCH_BIND_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      LDAP_USER_SEARCH_FILTER: (uid={0})

    depends_on:
      db:
        condition: service_healthy
      guacd:
        condition: service_started
    restart: unless-stopped

volumes:
  pgdata:
